(()=>{"use strict";const e=async e=>{let t=await fetch(e.url,e.params);return await t.json()};class t{create(t,s){e({url:"https://websocketbackend.onrender.com/new-user",params:{method:"POST",body:JSON.stringify({name:t})}}).then((e=>{"ok"!==e.status?(document.querySelector(".modal__container").style.display="inherit",document.querySelector(".modal__content").classList.add("active"),document.querySelector(".modal__header").textContent=`${e.message}`):s(e)}))}update(){}delete(){}}class s extends t{}const n=document.getElementById("root");new class{constructor(e){this.container=e,this.api=new s,this.websocket=null,this.chat=this.container.querySelector(".chat__container")}init(){this.subscribeOnEvents()}registerEvents(){this.ws=new WebSocket("wss://websocketbackend.onrender.com/ws"),this.ws.addEventListener("open",(e=>{console.log(e),console.log("ws open")})),this.ws.addEventListener("close",(e=>{console.log(e),console.log("ws close")})),this.ws.addEventListener("error",(e=>{console.log(e),console.log("ws error")})),this.ws.addEventListener("message",(e=>{let t=JSON.parse(e.data);if("send"===t.type){const e=new Date,s=document.createElement("div");return s.classList.add("chat__msg"),s.insertAdjacentHTML("afterbegin",`\n        <p class="msg__info"><span class="msg__user__name">${t.user.name},</span> <span class="msg__time">\n        ${e.toLocaleTimeString()}</span> <span class="msg__date">${e.toLocaleDateString()}</span></p>\n        <p class="msg__text">${t.message}</p>`),t.user.name===this.userName&&(s.classList.add("this__user"),s.querySelector(".msg__user__name").textContent="You"),void this.chat.querySelector(".chat__window").insertAdjacentElement("beforeend",s)}this.renderUsers(t)}))}subscribeOnEvents(){this.container.querySelector(".btn_contiune").addEventListener("click",(e=>{e.preventDefault(),this.container.querySelector(".modal__container").style.display="none",this.container.querySelector(".modal__content").classList.remove("active"),this.userName=this.container.querySelector(".form__input").value,this.api.create(this.userName,(e=>{const t=document.createElement("li");t.dataset.id=e.user.id,this.userId=e.user.id,t.dataset.name=e.user.name,t.textContent=e.user.name,t.classList.add("chat__user"),document.querySelector(".chat__users").appendChild(t),this.registerEvents()})),this.container.querySelector(".input__chat__message").addEventListener("keyup",(e=>{13===e.keyCode&&this.sendMessage()}))})),window.addEventListener("unload",(()=>{const e={type:"exit",message:null,user:{id:this.userId,name:this.userName}};this.ws.send(JSON.stringify(e))}))}sendMessage(){const e={type:"send",message:this.container.querySelector(".input__chat__message").value,user:{name:this.userName}};this.ws.send(JSON.stringify(e)),this.container.querySelector(".input__chat__message").value=""}renderUsers(e){document.querySelector(".chat__users").innerHTML="",e.forEach((e=>{const t=document.createElement("li");t.dataset.id=e.id,t.dataset.name=e.name,t.textContent=e.name,t.classList.add("chat__user"),e.name===this.userName&&(t.classList.add("this__user"),t.textContent="You"),document.querySelector(".chat__users").appendChild(t)}))}}(n).init()})();